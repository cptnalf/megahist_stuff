some stuff to think about tool-izing

1) check for other changes to the files in the changeset you're merging
  - this tool would take a changeset and figure out if there were any unmerged changes which you would end up merging if you merged this changeset.

2) diff the changes made in the dev branch to changes made in the release banch.
 - the idea here is that most common changes should/will be the same when moved from the release branch. if there are differences, there should be obvious reasons for it.

3) tool to do the merge and fill in all the necessary infos on the check-in
 - perhaps just the check-in part.
   but necessary parts:
   work-item list
   comment-pasting from the original changeset.


4) tool to help move release-branch fixes to dev
  - would list your work items (maybe select a query)
	  then look at the changesets attached to the work items
		then offer to merge the changes checked in to a workspace on a dev branch (list workspaces?)
		would then checkout files 
		  (Warn if they are already checked out, perhaps forbid if they are?)
		list o' files changed, then walk through a merge of the changed files into the branch
		

poc's:
	work item links (find changesets)
	tfs difference configs

